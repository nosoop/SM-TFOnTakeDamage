"Games"
{
	"tf"
	{
		"Functions"
		{
			"CTFGameRules::ApplyOnDamageModifyRules()"
			{
				"signature"		"CTFGameRules::ApplyOnDamageModifyRules()"
				"callconv"		"thiscall"
				"return"		"bool" // on false this skips the entire damage logic??
				"this"			"address"
				"arguments"
				{
					"damage_info"
					{
						"type"	"int"
					}
					"target"
					{
						"type"	"cbaseentity"
					}
					"some_bool"
					{
						"type"	"bool"
					}
				}
			}
		}
		"Offsets"
		{
			"CTFPlayer::OnTakeDamage()"
			{
				"linux"		"63"
				"windows"	"62"
			}
			
			// CTakeDamageInfo offsets
			"CTakeDamageInfo::m_eCritType"
			{
				// CTakeDamageInfo::SetCritType
				"linux"		"100" // 64h
			}
		}
		"Signatures"
		{
			"CTFGameRules::ApplyOnDamageModifyRules()"
			{
				// unique xref "or_crit_vs_playercond"
				"library"	"server"
				"linux"		"@_ZN12CTFGameRules24ApplyOnDamageModifyRulesER15CTakeDamageInfoP11CBaseEntityb"
				"windows"	"\x55\x8B\xEC\x81\xEC\xAC\x00\x00\x00\x56\x8B\x75\x0C"
			}
			"CTFPlayer::OnTakeDamage()"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer12OnTakeDamageERK15CTakeDamageInfo"
				"windows"	"\x55\x8B\xEC\x81\xEC\x2A\x2A\x2A\x2A\x56\x8B\x75\x2A\x57\x8B\xF9\x8D\x8D\x2A\x2A\x2A\x2A"
			}
			"CTFPlayer::OnTakeDamage_Alive()"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer18OnTakeDamage_AliveERK15CTakeDamageInfo"
				"windows"	"\x55\x8B\xEC\x83\xEC\x2A\x56\x57\x8B\xF9\x8B\x0D\x2A\x2A\x2A\x2A\x89\x7D\x2A"
			}
		}
	}
}
